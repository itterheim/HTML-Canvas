{"version":3,"sources":["ts\\App.ts","ts\\generative.ts"],"names":[],"mappings":"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","file":"generative.1a0d2d9c.map","sourceRoot":"..","sourcesContent":["export class App {\r\n    private canvas: HTMLCanvasElement;\r\n    private ctx: CanvasRenderingContext2D;\r\n\r\n    private cellSize = 50;\r\n    private padding: { v: number, h: number };\r\n    private transformations: { [key: string]: (xIndex: number, yIndex: number) => number} = {};\r\n\r\n    constructor() {\r\n        console.clear();\r\n        this.canvas = document.getElementById('image') as HTMLCanvasElement;\r\n        this.ctx = this.canvas.getContext('2d');\r\n\r\n        this.canvas.width = window.innerWidth;\r\n        this.canvas.height = window.innerHeight;\r\n\r\n        this.padding = {\r\n            h: Math.floor((this.canvas.width % this.cellSize) / 2),\r\n            v: Math.floor((this.canvas.height % this.cellSize) / 2)\r\n        };\r\n\r\n        const maxXIndex = Math.floor(this.canvas.width / this.cellSize) - 1;\r\n        const maxYIndex = Math.floor(this.canvas.height / this.cellSize) - 1;\r\n        const maxLength = Math.sqrt(maxXIndex * maxXIndex + maxYIndex * maxYIndex);\r\n\r\n        this.transformations.cross = (xIndex, yIndex) => {\r\n            const length = 0.01 + Math.sqrt(xIndex * xIndex + yIndex * yIndex);\r\n            return Math.min(length / maxLength, 1);\r\n        };\r\n\r\n        this.transformations.circle = (xIndex, yIndex) => {\r\n            xIndex = maxXIndex - xIndex;\r\n            const length = 0.01 + Math.sqrt(xIndex * xIndex + yIndex * yIndex);\r\n            return Math.min(length * 1.25 / maxLength, 1);\r\n        };\r\n\r\n        this.run();\r\n    }\r\n\r\n    public run(): void {\r\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n        for (let xIndex = 0; xIndex * this.cellSize <= this.canvas.width - this.cellSize; xIndex++) {\r\n            for (let yIndex = 0; yIndex * this.cellSize <= this.canvas.height - this.cellSize; yIndex++) {\r\n                this.drawCell(xIndex, yIndex);\r\n            }\r\n        }\r\n    }\r\n\r\n    private drawCell(xIndex: number, yIndex: number): void {\r\n        const x = xIndex * this.cellSize + this.padding.h;\r\n        const y = yIndex * this.cellSize + this.padding.v;\r\n\r\n        this.circleRenderer(x, y, this.transformations.circle(xIndex, yIndex));\r\n        this.crossRenderer(x, y, this.transformations.cross(xIndex, yIndex));\r\n    }\r\n\r\n    private crossRenderer(x: number, y: number, progress: number = 1) {\r\n        this.ctx.lineWidth = 2 + progress * 3;\r\n        this.ctx.lineCap = 'round';\r\n        this.ctx.strokeStyle = `rgba(0,0,0,${((Math.sin(progress * Math.PI * 1.5) + 1) / 2) * 0.4}`;\r\n\r\n        const padding = 3 + progress * 10;\r\n\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(x + padding, y + padding);\r\n        this.ctx.lineTo(x + this.cellSize - padding, y + this.cellSize - padding);\r\n        this.ctx.moveTo(x + this.cellSize - padding, y + padding);\r\n        this.ctx.lineTo(x + padding, y + this.cellSize - padding);\r\n        this.ctx.stroke();\r\n    }\r\n\r\n    private circleRenderer(x: number, y: number, progress: number = 1) {\r\n        this.ctx.lineWidth = 2 + (1 - progress) * 4;\r\n        this.ctx.strokeStyle = `rgba(0,70,200,${0 + ((Math.sin(progress * Math.PI * 1.5) + 1) / 2) * 0.6}`;\r\n\r\n        const r = 0.5 * this.cellSize / 2 + progress * 0.4 * this.cellSize / 2;\r\n\r\n        this.ctx.beginPath();\r\n        const start = progress * Math.PI;\r\n        this.ctx.arc(x + this.cellSize / 2, y + this.cellSize / 2, r, start, start + 0.4 + progress * (Math.PI - 0.4));\r\n        this.ctx.stroke();\r\n    }\r\n}\r\n","import { App } from './App';\r\n\r\nconst app = new App();\r\n// app.run();\r\n"]}