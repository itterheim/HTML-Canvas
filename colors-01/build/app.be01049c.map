{"version":3,"sources":["ts\\Point.ts","ts\\HsvColor.ts","ts\\RgbColor.ts","ts\\Renderer.ts","ts\\app.ts"],"names":[],"mappings":"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","file":"app.be01049c.map","sourceRoot":"..","sourcesContent":["export class Point {\r\n    constructor (public x: number = 0, public y: number = 0) {}\r\n}\r\n","import { RgbColor } from './RgbColor';\r\n\r\nexport class HsvColor {\r\n    public h: number;\r\n    public s: number;\r\n    public v: number;\r\n\r\n    constructor (h: number, s: number, v: number) {\r\n        this.h = h;\r\n        this.s = s;\r\n        this.v = v;\r\n    }\r\n\r\n    public getRgb(): RgbColor {\r\n        let r;\r\n        let g;\r\n        let b;\r\n\r\n        const i = Math.floor(this.h * 6);\r\n        const f = this.h * 6 - i;\r\n        const p = this.v * (1 - this.s);\r\n        const q = this.v * (1 - f * this.s);\r\n        const t = this.v * (1 - (1 - f) * this.s);\r\n\r\n        switch (i % 6) {\r\n            case 0:\r\n                r = this.v;\r\n                g = t;\r\n                b = p;\r\n                break;\r\n            case 1:\r\n                r = q;\r\n                g = this.v;\r\n                b = p;\r\n                break;\r\n            case 2:\r\n                r = p;\r\n                g = this.v;\r\n                b = t;\r\n                break;\r\n            case 3:\r\n                r = p;\r\n                g = q;\r\n                b = this.v;\r\n                break;\r\n            case 4:\r\n                r = t;\r\n                g = p;\r\n                b = this.v;\r\n                break;\r\n            case 5:\r\n                r = this.v;\r\n                g = p;\r\n                b = q;\r\n                break;\r\n        }\r\n\r\n        return new RgbColor(r * 255, g * 255, b * 255);\r\n    }\r\n}\r\n","import { HsvColor } from './HsvColor';\r\n\r\nexport class RgbColor {\r\n    public r: number;\r\n    public g: number;\r\n    public b: number;\r\n\r\n    constructor (r: number, g: number, b: number) {\r\n        this.r = r;\r\n        this.g = g;\r\n        this.b = b;\r\n    }\r\n\r\n    public getHsv(): HsvColor {\r\n        const r = this.r / 255;\r\n        const g = this.g / 255;\r\n        const b = this.b / 255;\r\n\r\n        const max = Math.max(r, g, b);\r\n        const min = Math.min(r, g, b);\r\n        let h;\r\n        let s;\r\n        const v = max;\r\n\r\n        const d = max - min;\r\n        s = max === 0 ? 0 : d / max;\r\n\r\n        if (max === min) {\r\n            h = 0; // achromatic\r\n        } else {\r\n            switch (max) {\r\n                case r:\r\n                    h = (g - b) / d + (g < b ? 6 : 0);\r\n                    break;\r\n                case g:\r\n                    h = (b - r) / d + 2;\r\n                    break;\r\n                case b:\r\n                    h = (r - g) / d + 4;\r\n                    break;\r\n            }\r\n            h /= 6;\r\n        }\r\n\r\n        return new HsvColor(h, s, v);\r\n    }\r\n}\r\n","\r\nimport { HsvColor } from './HsvColor';\r\nimport { Point } from './Point';\r\nimport { RgbColor } from './RgbColor';\r\n\r\nexport class Renderer {\r\n    public canvas: HTMLCanvasElement;\r\n    private ctx: CanvasRenderingContext2D;\r\n\r\n    private A: Point; // saturation -> B\r\n    private B: Point; // hue -> C\r\n    private C: Point; // value -> D\r\n    private D: Point;\r\n\r\n    private step = 10;\r\n\r\n    constructor () {\r\n        this.canvas = document.createElement('canvas');\r\n        this.canvas.width = window.innerWidth;\r\n        this.canvas.height = window.innerHeight;\r\n\r\n        this.ctx = this.canvas.getContext('2d');\r\n\r\n        document.body.appendChild(this.canvas);\r\n\r\n        this.A = new Point(100, 100);\r\n        this.B = new Point(100, this.canvas.height - 100);\r\n        this.C = new Point(this.canvas.width - 100, this.canvas.height - 100);\r\n        this.D = new Point(this.canvas.width - 100, 100);\r\n    }\r\n\r\n    public render (image: HTMLImageElement, step: number = 10) {\r\n        this.step = step;\r\n\r\n        this.reset();\r\n\r\n        const canvas = document.createElement('canvas') as HTMLCanvasElement;\r\n        const ctx = canvas.getContext('2d');\r\n        canvas.width = image.naturalWidth;\r\n        canvas.height = image.naturalHeight;\r\n        ctx.drawImage(image, 0, 0);\r\n\r\n        this.ctx.drawImage(image, this.canvas.width / 2 - 100, 20, 200, canvas.height * 200 / canvas.width);\r\n\r\n        this.renderImage(canvas, ctx);\r\n    }\r\n\r\n    public reset () {\r\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n        this.renderAxes();\r\n    }\r\n\r\n    private renderImage (canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D) {\r\n        let done: string = '';\r\n\r\n        let x = 0;\r\n        const y = 0;\r\n\r\n        const loop = () => {\r\n            for (let y = 0; y < canvas.height; y += this.step) {\r\n                const data = ctx.getImageData(x, y, 1, 1).data;\r\n                const color = new RgbColor(data[0], data[1], data[2]);\r\n                const text = `(${color.r},${color.g},${color.b})`;\r\n\r\n                if (done.indexOf(text) === -1) {\r\n                    this.renderColor(color);\r\n                    done += text;\r\n                }\r\n            }\r\n\r\n            x += this.step;\r\n\r\n            if (x < canvas.width) {\r\n                window.animation = window.requestAnimationFrame(() => loop());\r\n            }\r\n        };\r\n\r\n        window.animation = window.requestAnimationFrame(() => loop());\r\n    }\r\n\r\n    private renderAxes () {\r\n        this.ctx.lineWidth = 1;\r\n        this.ctx.strokeStyle = '#000';\r\n\r\n        this.ctx.beginPath();\r\n        this.ctx.arc(this.A.x, this.A.y, 5, 0, Math.PI * 2);\r\n        this.ctx.stroke();\r\n        this.ctx.beginPath();\r\n        this.ctx.arc(this.B.x, this.B.y, 5, 0, Math.PI * 2);\r\n        this.ctx.stroke();\r\n        this.ctx.beginPath();\r\n        this.ctx.arc(this.C.x, this.C.y, 5, 0, Math.PI * 2);\r\n        this.ctx.stroke();\r\n        this.ctx.beginPath();\r\n        this.ctx.arc(this.D.x, this.D.y, 5, 0, Math.PI * 2);\r\n        this.ctx.stroke();\r\n\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(this.A.x, this.A.y);\r\n        this.ctx.lineTo(this.B.x, this.B.y);\r\n        this.ctx.lineTo(this.C.x, this.C.y);\r\n        this.ctx.lineTo(this.D.x, this.D.y);\r\n        this.ctx.stroke();\r\n    }\r\n\r\n    private renderColor (color: RgbColor) {\r\n        const hsv = color.getHsv();\r\n\r\n        const position = this.getPosition(hsv);\r\n\r\n        this.ctx.beginPath();\r\n        // this.ctx.fillStyle = `rgba(${color.r},${color.g},${color.b},${hsv.s})`;\r\n        this.ctx.fillStyle = `rgba(${color.r},${color.g},${color.b},0.1)`;\r\n        // this.ctx.strokeStyle = 'rgba(0,0,0,0.5)';\r\n        // this.ctx.lineWidth = 0.1;\r\n        this.ctx.arc(position.x, position.y, 6, 0, Math.PI * 2);\r\n        this.ctx.fill();\r\n        // this.ctx.stroke();\r\n\r\n    }\r\n\r\n    private getPosition (hsv: HsvColor): Point {\r\n        const sum = hsv.h + hsv.s + hsv.v;\r\n\r\n        const a = new Point(this.A.x + hsv.s * (this.B.x - this.A.x), this.A.y + hsv.s * (this.B.y - this.A.y));\r\n        const b = new Point(this.B.x + hsv.h * (this.C.x - this.B.x), this.B.y + hsv.h * (this.C.y - this.B.y));\r\n        const c = new Point(this.C.x + hsv.v * (this.D.x - this.C.x), this.C.y + hsv.v * (this.D.y - this.C.y));\r\n\r\n        return new Point((hsv.s * a.x + hsv.h * b.x + hsv.v * c.x) / sum, (hsv.s * a.y + hsv.h * b.y + hsv.v * c.y) / sum);\r\n\r\n        // const a = new Point(this.A.x + hsv.s * (this.B.x - this.A.x), this.A.y + hsv.s * (this.B.y - this.A.y));\r\n        // const b = new Point(this.B.x + hsv.h * (this.C.x - this.B.x), this.B.y + hsv.h * (this.C.y - this.B.y));\r\n        // const c = new Point(this.C.x + hsv.v * (this.D.x - this.C.x), this.C.y + hsv.v * (this.D.y - this.C.y));\r\n\r\n        // return new Point((a.x + b.x + c.x) / 3, (a.y + b.y + c.y) / 3);\r\n\r\n        // const a = new Point(this.A.x + hsv.s * (this.B.x - this.A.x), this.A.y + hsv.s * (this.B.y - this.A.y));\r\n        // const b = new Point(this.B.x + hsv.h * (this.C.x - this.B.x), this.B.y + hsv.h * (this.C.y - this.B.y));\r\n        // const c = new Point(this.C.x + hsv.v * (this.D.x - this.C.x), this.C.y + hsv.v * (this.D.y - this.C.y));\r\n\r\n        // return new Point(b.x, (a.y + c.y) / 2);\r\n    }\r\n}\r\n","import { Renderer } from './Renderer';\r\n\r\ndeclare global {\r\n    interface Window { animation: number; }\r\n}\r\n\r\nwindow.cancelAnimationFrame(window.animation);\r\nconst dead = document.body.querySelectorAll('canvas');\r\nfor (const el of dead) {\r\n    el.parentNode.removeChild(el);\r\n}\r\nconsole.clear();\r\nconsole.log(new Date());\r\n\r\nconst renderer = new Renderer();\r\n\r\n// default image\r\nconst defaultImage: HTMLImageElement = document.querySelector('img');\r\ndefaultImage.onload = () => {\r\n    renderer.render(defaultImage);\r\n};\r\nif (defaultImage.complete) { renderer.render(defaultImage); }\r\n\r\n// drop image from filesystem\r\nrenderer.canvas.addEventListener('drop', (e: DragEvent) => {\r\n    e.preventDefault();\r\n\r\n    window.cancelAnimationFrame(window.animation);\r\n\r\n    for (const file of e.dataTransfer.files) {\r\n        if (isValidImage(file)) {\r\n            readFile(file);\r\n            break;\r\n        }\r\n    }\r\n});\r\nrenderer.canvas.addEventListener('dragover', (e) => { e.preventDefault(); });\r\n\r\nfunction isValidImage (file: File): boolean {\r\n    const valid = ['image/gif', 'image/png', 'image/jpeg', 'image/bmp'];\r\n    return valid.indexOf(file.type) > -1;\r\n}\r\n\r\nfunction readFile (file: File) {\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = (e: ProgressEvent) => {\r\n            const image = new Image();\r\n            image.onload = () => {\r\n                renderer.render(image);\r\n            };\r\n            image.src = reader.result as string;\r\n        };\r\n\r\n        reader.readAsDataURL(file);\r\n}\r\n"]}