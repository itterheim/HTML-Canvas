{"version":3,"sources":["ts/App.ts","ts/generative.ts"],"names":[],"mappings":";AAQa,aAAA,QAAA,YAAA,EAAb,IAAA,EAAA,WAII,SAAA,IAAA,IAAA,EAAA,KACU,EAAM,SAAS,cAAc,UAC/B,GAAO,EAAI,WAAW,YAAY,GAEtC,OAAO,qBAAqB,OAAO,MACnC,OAAO,cAAc,OAAO,UAC5B,OAAO,aAAa,OAAO,SAEtB,KAAA,OAAS,SAAS,cAAc,UAChC,KAAA,IAAM,KAAK,OAAO,WAAW,MAElC,SAAS,KAAK,sBAAsB,aAAc,KAAK,QAEjD,IAAA,EAAQ,WACV,OAAO,qBAAqB,OAAO,MACnC,EAAK,SACL,EAAK,OAGT,OAAO,SAAW,EAClB,SAAS,WAAa,EACjB,KAAA,OAAO,QAAU,EAEjB,KAAA,SACA,KAAA,MAgHb,OA7GY,EAAA,UAAA,IAAR,WAAA,IAAA,EAAA,KACI,QAAQ,QAEH,KAAA,IAAI,UAAY,UAChB,KAAA,IAAI,SAAS,EAAG,EAAG,KAAK,OAAO,MAAO,KAAK,OAAO,QAEjD,IAAA,EAAM,KAAK,MAAM,KAAK,IAAI,KAAK,IAAI,KAAK,OAAO,OAAQ,KAAK,OAAO,QAAU,KAAK,IAAI,IACtF,EAAO,KAAK,IAAI,EAAG,GAAO,EAE1B,EAAO,KAAK,OAAO,KAAK,OAAO,MAAQ,GAAQ,GAC/C,EAAM,KAAK,OAAO,KAAK,OAAO,OAAS,GAAQ,GAE/C,EAAkB,IAAI,MAAM,GAAM,UAAK,GAAW,IAAI,SAAC,GAAM,OAAA,IAAI,MAAM,GAAM,UAAK,KACxF,EAAI,GAAG,GAAK,KAAK,SACjB,EAAI,GAAG,EAAO,GAAK,KAAK,SACxB,EAAI,EAAO,GAAG,GAAK,KAAK,SACxB,EAAI,EAAO,GAAG,EAAO,GAAK,KAAK,SAE1B,KAAA,IAAI,UAAY,OAChB,KAAA,IAAI,SAAS,EAAM,EAAK,EAAM,GAE9B,KAAA,WAAW,EAAO,EAAG,EAAM,EAAG,EAAI,GAAG,IACrC,KAAA,WAAW,EAAO,EAAG,EAAM,EAAO,EAAG,EAAI,GAAG,EAAO,IACnD,KAAA,WAAW,EAAO,EAAO,EAAG,EAAM,EAAG,EAAI,EAAO,GAAG,IACnD,KAAA,WAAW,EAAO,EAAO,EAAG,EAAM,EAAO,EAAG,EAAI,EAAO,GAAG,EAAO,IAElE,IAAA,EAAW,EAAO,EA0DtB,OAAO,KAAO,OAAO,sBAAsB,SAAC,GAAM,OAzDrC,SAAP,EAAQ,GACN,GAAA,EAAW,EAAG,CACT,IAAA,IAAI,EAAI,EAAG,EAAI,EAAO,EAAG,GAAK,EAC1B,IAAA,IAAI,EAAI,EAAG,EAAI,EAAO,EAAG,GAAK,EAAU,CACrC,IAAA,EACA,EAAI,GAAG,GACP,EAAI,EAAI,GAAU,GAClB,EAAI,GAAG,EAAI,GACX,EAAI,EAAI,GAAU,EAAI,GACtB,EAAM,EAAM,EAChB,GAAO,IAAO,KAAK,SAAW,GAC9B,EAAI,EAAI,EAAW,GAAG,EAAI,EAAW,GAAK,EAC1C,EAAK,WAAW,EAAO,EAAI,EAAW,EAAG,EAAM,EAAI,EAAW,EAAG,GAMjE,GAJA,EACI,EAAI,GAAG,GACP,EAAI,EAAI,GAAU,GAClB,EAAI,EAAI,EAAW,GAAG,EAAI,EAAW,IAC7B,EACZ,GAAO,IAAO,KAAK,SAAW,GAC9B,EAAI,EAAI,EAAW,GAAG,GAAK,EAC3B,EAAK,WAAW,EAAO,EAAI,EAAW,EAAG,EAAM,EAAG,EAAI,EAAI,EAAW,GAAG,IAMxE,GAJA,EACI,EAAI,EAAI,GAAU,GAClB,EAAI,EAAI,GAAU,EAAI,GACtB,EAAI,EAAI,EAAW,GAAG,EAAI,EAAW,IAC7B,EACZ,GAAO,IAAO,KAAK,SAAW,GAC9B,EAAI,EAAI,GAAU,EAAI,EAAW,GAAK,EACtC,EAAK,WAAW,EAAO,EAAI,EAAU,EAAM,EAAI,EAAW,EAAG,EAAI,EAAI,GAAU,EAAI,EAAW,IAM9F,GAJA,EACI,EAAI,GAAG,EAAI,GACX,EAAI,EAAI,GAAU,EAAI,GACtB,EAAI,EAAI,EAAW,GAAG,EAAI,EAAW,IAC7B,EACZ,GAAO,IAAO,KAAK,SAAW,GAC9B,EAAI,EAAI,EAAW,GAAG,EAAI,GAAY,EACtC,EAAK,WAAW,EAAO,EAAI,EAAW,EAAG,EAAM,EAAI,EAAU,EAAI,EAAI,EAAW,GAAG,EAAI,IAMvF,GAJA,EACI,EAAI,GAAG,GACP,EAAI,GAAG,EAAI,GACX,EAAI,EAAI,EAAW,GAAG,EAAI,EAAW,IAC7B,EACZ,GAAO,IAAO,KAAK,SAAW,GAC9B,EAAI,GAAG,EAAI,EAAW,GAAK,EAC3B,EAAK,WAAW,EAAO,EAAG,EAAM,EAAI,EAAW,EAAG,EAAI,GAAG,EAAI,EAAW,IAIhF,GAAY,EACZ,OAAO,KAAO,OAAO,sBAAsB,SAAC,GAAM,OAAA,OAIR,MAG9C,EAAA,UAAA,WAAR,SAAoB,EAAW,EAAW,GAChC,IAAA,EAAI,KAAK,MAAc,IAAR,GAChB,KAAA,IAAI,UAAY,OAAO,EAAC,IAAI,EAAC,IAAI,EAAC,IAClC,KAAA,IAAI,SAAS,EAAG,EAAG,EAAG,IAGvB,EAAA,UAAA,MAAR,WACS,KAAA,IAAI,UAAU,EAAG,EAAG,KAAK,OAAO,MAAO,KAAK,OAAO,SAGpD,EAAA,UAAA,OAAR,WACU,IAAA,EAAI,SAAS,KAAK,YAClB,EAAI,SAAS,KAAK,aAEe,iBAA5B,OAAO,kBACT,KAAA,OAAO,MAAQ,EAAI,OAAO,iBAC1B,KAAA,OAAO,OAAS,EAAI,OAAO,mBAE3B,KAAA,OAAO,MAAQ,EACf,KAAA,OAAO,OAAS,IAGjC,EA5IA,GAAa,QAAA,IAAA;;ACHb,aAAA,QAAA,YAAA,EALA,IAAA,EAAA,QAAA,SAEA,QAAQ,QACR,QAAQ,IAAI,IAAI,MAEhB,IAAI,EAAA","file":"generative.3fbaa8f8.js","sourceRoot":"..","sourcesContent":["declare global {\r\n    interface Window {\r\n        anim: number;\r\n        timeout: number;\r\n        interval: number;\r\n    }\r\n}\r\n\r\nexport class App {\r\n    private canvas: HTMLCanvasElement;\r\n    private ctx: CanvasRenderingContext2D;\r\n\r\n    constructor () {\r\n        const old = document.querySelector('canvas');\r\n        if (old) { old.parentNode.removeChild(old); }\r\n\r\n        window.cancelAnimationFrame(window.anim);\r\n        window.clearInterval(window.interval);\r\n        window.clearTimeout(window.timeout);\r\n\r\n        this.canvas = document.createElement('canvas');\r\n        this.ctx = this.canvas.getContext('2d');\r\n\r\n        document.body.insertAdjacentElement('afterbegin', this.canvas);\r\n\r\n        const start = () => {\r\n            window.cancelAnimationFrame(window.anim);\r\n            this.resize();\r\n            this.run();\r\n        };\r\n\r\n        window.onresize = start;\r\n        document.onkeypress = start;\r\n        this.canvas.onclick = start;\r\n\r\n        this.resize();\r\n        this.run();\r\n    }\r\n\r\n    private run () {\r\n        console.clear();\r\n\r\n        this.ctx.fillStyle = '#35002f';\r\n        this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n        const exp = Math.floor(Math.log(Math.min(this.canvas.height, this.canvas.width)) / Math.log(2));\r\n        const size = Math.pow(2, exp) + 1;\r\n\r\n        const left = Math.floor((this.canvas.width - size) / 2);\r\n        const top = Math.floor((this.canvas.height - size) / 2);\r\n\r\n        const map: number[][] = new Array(size).fill(undefined).map((x) => new Array(size).fill(undefined));\r\n        map[0][0] = Math.random();\r\n        map[0][size - 1] = Math.random();\r\n        map[size - 1][0] = Math.random();\r\n        map[size - 1][size - 1] = Math.random();\r\n\r\n        this.ctx.fillStyle = '#fff';\r\n        this.ctx.fillRect(left, top, size, size);\r\n\r\n        this.renderCell(left + 0, top + 0, map[0][0]);\r\n        this.renderCell(left + 0, top + size - 1, map[0][size - 1]);\r\n        this.renderCell(left + size - 1, top + 0, map[size - 1][0]);\r\n        this.renderCell(left + size - 1, top + size - 1, map[size - 1][size - 1]);\r\n\r\n        let distance = size - 1;\r\n        const step = (time: number) => {\r\n            if (distance > 1) {\r\n                for (let i = 0; i < size - 1; i += distance) {\r\n                    for (let j = 0; j < size - 1; j += distance) {\r\n                        let sum =\r\n                            map[i][j] +\r\n                            map[i + distance][j] +\r\n                            map[i][j + distance] +\r\n                            map[i + distance][j + distance];\r\n                        let avg = sum / 4;\r\n                        avg += 0.05 - Math.random() / 10;\r\n                        map[i + distance / 2][j + distance / 2] = avg;\r\n                        this.renderCell(left + i + distance / 2, top + j + distance / 2, avg);\r\n\r\n                        sum =\r\n                            map[i][j] +\r\n                            map[i + distance][j] +\r\n                            map[i + distance / 2][j + distance / 2];\r\n                        avg = sum / 3;\r\n                        avg += 0.05 - Math.random() / 10;\r\n                        map[i + distance / 2][j] = avg;\r\n                        this.renderCell(left + i + distance / 2, top + j, map[i + distance / 2][j]);\r\n\r\n                        sum =\r\n                            map[i + distance][j] +\r\n                            map[i + distance][j + distance] +\r\n                            map[i + distance / 2][j + distance / 2];\r\n                        avg = sum / 3;\r\n                        avg += 0.05 - Math.random() / 10;\r\n                        map[i + distance][j + distance / 2] = avg;\r\n                        this.renderCell(left + i + distance, top + j + distance / 2, map[i + distance][j + distance / 2]);\r\n\r\n                        sum =\r\n                            map[i][j + distance] +\r\n                            map[i + distance][j + distance] +\r\n                            map[i + distance / 2][j + distance / 2];\r\n                        avg = sum / 3;\r\n                        avg += 0.05 - Math.random() / 10;\r\n                        map[i + distance / 2][j + distance] = avg;\r\n                        this.renderCell(left + i + distance / 2, top + j + distance, map[i + distance / 2][j + distance]);\r\n\r\n                        sum =\r\n                            map[i][j] +\r\n                            map[i][j + distance] +\r\n                            map[i + distance / 2][j + distance / 2];\r\n                        avg = sum / 3;\r\n                        avg += 0.05 - Math.random() / 10;\r\n                        map[i][j + distance / 2] = avg;\r\n                        this.renderCell(left + i, top + j + distance / 2, map[i][j + distance / 2]);\r\n                    }\r\n                }\r\n\r\n                distance /= 2;\r\n                window.anim = window.requestAnimationFrame((t) => step(t));\r\n            }\r\n        };\r\n\r\n        window.anim = window.requestAnimationFrame((t) => step(t));\r\n    }\r\n\r\n    private renderCell (x: number, y: number, shade: number) {\r\n        const c = Math.round(shade * 255);\r\n        this.ctx.fillStyle = `rgb(${c},${c},${c})`;\r\n        this.ctx.fillRect(x, y, 1, 1);\r\n    }\r\n\r\n    private clear () {\r\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    }\r\n\r\n    private resize () {\r\n        const w = document.body.clientWidth;\r\n        const h = document.body.clientHeight;\r\n\r\n        if (typeof window.devicePixelRatio === 'number') {\r\n            this.canvas.width = w * window.devicePixelRatio;\r\n            this.canvas.height = h * window.devicePixelRatio;\r\n        } else {\r\n            this.canvas.width = w;\r\n            this.canvas.height = h;\r\n        }\r\n    }\r\n}\r\n","import { App } from './App';\r\n\r\nconsole.clear();\r\nconsole.log(new Date());\r\n\r\nnew App();\r\n"]}