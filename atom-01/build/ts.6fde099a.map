{"version":3,"sources":["ts/ElectronLayer.ts","ts/elements.ts","ts/Atom.ts","ts/Point.ts","ts/Renderer.ts","ts/App.ts","ts/index.ts"],"names":[],"mappings":"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","file":"ts.6fde099a.map","sourceRoot":"..","sourcesContent":["export class ElectronLayer {\r\n    public readonly number: number;\r\n    public readonly type: string;\r\n    public readonly count: number;\r\n\r\n    constructor (configuration: string) {\r\n        const reLetter = /[a-zA-Z]/g;\r\n        const values = configuration.split(reLetter);\r\n\r\n        this.number = parseInt(values[0], 10);\r\n        this.count = parseInt(values[1], 10);\r\n\r\n        this.type = configuration.match(reLetter)[0];\r\n    }\r\n}\r\n","export interface IElement {\r\n    number: number;\r\n    name: string;\r\n    configuration: string;\r\n    symbol: string;\r\n}\r\n\r\nexport const elements: IElement[] = [\r\n    { number: 1, name: 'Hydrogen', symbol: 'H', configuration: '1s1' },\r\n    { number: 2, name: 'Helium', symbol: 'He', configuration: '1s2' },\r\n    { number: 3, name: 'Lithium', symbol: 'Li', configuration: '[He]2s1' },\r\n    { number: 4, name: 'Beryllium', symbol: 'Be', configuration: '[He]2s2' },\r\n    { number: 5, name: 'Boron', symbol: 'B', configuration: '[He]2s22p1' },\r\n    { number: 6, name: 'Carbon', symbol: 'C', configuration: '[He]2s22p2' },\r\n    { number: 7, name: 'Nitrogen', symbol: 'N', configuration: '[He]2s22p3' },\r\n    { number: 8, name: 'Oxygen', symbol: 'O', configuration: '[He]2s22p4' },\r\n    { number: 9, name: 'Fluorine', symbol: 'F', configuration: '[He]2s22p5' },\r\n    { number: 10, name: 'Neon', symbol: 'Ne', configuration: '[He]2s22p6' },\r\n    { number: 11, name: 'Sodium', symbol: 'Na', configuration: '[Ne]3s1' },\r\n    { number: 12, name: 'Magnesium', symbol: 'Mg', configuration: '[Ne]3s2' },\r\n    { number: 13, name: 'Aluminum', symbol: 'Al', configuration: '[Ne]3s23p1' },\r\n    { number: 14, name: 'Silicon', symbol: 'Si', configuration: '[Ne]3s23p2' },\r\n    { number: 15, name: 'Phosphorus', symbol: 'Ps', configuration: '[Ne]3s23p3' },\r\n    { number: 16, name: 'Sulfur', symbol: 'S', configuration: '[Ne]3s23p4' },\r\n    { number: 17, name: 'Chlorine', symbol: 'Cl', configuration: '[Ne]3s23p5' },\r\n    { number: 18, name: 'Argon', symbol: 'Ar', configuration: '[Ne]3s23p6' },\r\n    { number: 19, name: 'Potassium', symbol: 'K', configuration: '[Ar]4s1' },\r\n    { number: 20, name: 'Calcium', symbol: 'Ca', configuration: '[Ar]4s2' },\r\n    { number: 21, name: 'Scandium', symbol: 'Sc', configuration: '[Ar]3d14s2' },\r\n    { number: 22, name: 'Titanium', symbol: 'Ti', configuration: '[Ar]3d24s2' },\r\n    { number: 23, name: 'Vanadium', symbol: 'V', configuration: '[Ar]3d34s2' },\r\n    { number: 24, name: 'Chromium', symbol: 'Cr', configuration: '[Ar]3d54s1' },\r\n    { number: 25, name: 'Manganese', symbol: 'Mn', configuration: '[Ar]3d54s2' },\r\n    { number: 26, name: 'Iron', symbol: 'Fe', configuration: '[Ar]3d64s2' },\r\n    { number: 27, name: 'Cobalt', symbol: 'Co', configuration: '[Ar]3d74s2' },\r\n    { number: 28, name: 'Nickel', symbol: 'Ni', configuration: '[Ar]3d84s2' },\r\n    { number: 29, name: 'Copper', symbol: 'Cu', configuration: '[Ar]3d104s1' },\r\n    { number: 30, name: 'Zinc', symbol: 'Zn', configuration: '[Ar]3d104s2' },\r\n    { number: 31, name: 'Gallium', symbol: 'Ga', configuration: '[Ar]3d104s24p1' },\r\n    { number: 32, name: 'Germanium', symbol: 'Ge', configuration: '[Ar]3d104s24p2' },\r\n    { number: 33, name: 'Arsenic', symbol: 'As', configuration: '[Ar]3d104s24p3' },\r\n    { number: 34, name: 'Selenium', symbol: 'Se', configuration: '[Ar]3d104s24p4' },\r\n    { number: 35, name: 'Bromine', symbol: 'Br', configuration: '[Ar]3d104s24p5' },\r\n    { number: 36, name: 'Krypton', symbol: 'Kr', configuration: '[Ar]3d104s24p6' },\r\n    { number: 37, name: 'Rubidium', symbol: 'Rb', configuration: '[Kr]5s1' },\r\n    { number: 38, name: 'Strontium', symbol: 'Sr', configuration: '[Kr]5s2' },\r\n    { number: 39, name: 'Yttrium', symbol: 'Y', configuration: '[Kr]4d15s2' },\r\n    { number: 40, name: 'Zirconium', symbol: 'Zr', configuration: '[Kr]4d25s2' },\r\n    { number: 41, name: 'Niobium', symbol: 'Nb', configuration: '[Kr]4d45s1' },\r\n    { number: 42, name: 'Molybdenum', symbol: 'Mo', configuration: '[Kr]4d55s1' },\r\n    { number: 43, name: 'Technetium', symbol: 'Tc', configuration: '[Kr]4d55s2' },\r\n    { number: 44, name: 'Ruthenium', symbol: 'Ru', configuration: '[Kr]4d75s1' },\r\n    { number: 45, name: 'Rhodium', symbol: 'Rh', configuration: '[Kr]4d85s1' },\r\n    { number: 46, name: 'Palladium', symbol: 'Pd', configuration: '[Kr]4d10' },\r\n    { number: 47, name: 'Silver', symbol: 'Ag', configuration: '[Kr]4d105s1' },\r\n    { number: 48, name: 'Cadmium', symbol: 'Cd', configuration: '[Kr]4d105s2' },\r\n    { number: 49, name: 'Indium', symbol: 'In', configuration: '[Kr]4d105s25p1' },\r\n    { number: 50, name: 'Tin', symbol: 'Sn', configuration: '[Kr]4d105s25p2' },\r\n    { number: 51, name: 'Antimony', symbol: 'Sb', configuration: '[Kr]4d105s25p3' },\r\n    { number: 52, name: 'Tellurium', symbol: 'Te', configuration: '[Kr]4d105s25p4' },\r\n    { number: 53, name: 'Iodine', symbol: 'I', configuration: '[Kr]4d105s25p5' },\r\n    { number: 54, name: 'Xenon', symbol: 'Xe', configuration: '[Kr]4d105s25p6' },\r\n    { number: 55, name: 'Cesium', symbol: 'Cs', configuration: '[Xe]6s1' },\r\n    { number: 56, name: 'Barium', symbol: 'Ba', configuration: '[Xe]6s2' },\r\n    { number: 57, name: 'Lanthanum', symbol: 'La', configuration: '[Xe]5d16s2' },\r\n    { number: 58, name: 'Cerium', symbol: 'Ce', configuration: '[Xe]4f15d16s2' },\r\n    { number: 59, name: 'Praseodymium', symbol: 'Pr', configuration: '[Xe]4f36s2' },\r\n    { number: 60, name: 'Neodymium', symbol: 'Nd', configuration: '[Xe]4f46s2' },\r\n    { number: 61, name: 'Promethium', symbol: 'Pm', configuration: '[Xe]4f56s2' },\r\n    { number: 62, name: 'Samarium', symbol: 'Sm', configuration: '[Xe]4f66s2' },\r\n    { number: 63, name: 'Europium', symbol: 'Eu', configuration: '[Xe]4f76s2' },\r\n    { number: 64, name: 'Gadolinium', symbol: 'Gd', configuration: '[Xe]4f75d16s2' },\r\n    { number: 65, name: 'Terbium', symbol: 'Tb', configuration: '[Xe]4f96s2' },\r\n    { number: 66, name: 'Dysprosium', symbol: 'Dy', configuration: '[Xe]4f106s2' },\r\n    { number: 67, name: 'Holmium', symbol: 'Ho', configuration: '[Xe]4f116s2' },\r\n    { number: 68, name: 'Erbium', symbol: 'Er', configuration: '[Xe]4f126s2' },\r\n    { number: 69, name: 'Thulium', symbol: 'Tm', configuration: '[Xe]4f136s2' },\r\n    { number: 70, name: 'Ytterbium', symbol: 'Yb', configuration: '[Xe]4f146s2' },\r\n    { number: 71, name: 'Lutetium', symbol: 'Lu', configuration: '[Xe]4f145d16s2' },\r\n    { number: 72, name: 'Hafnium', symbol: 'Hf', configuration: '[Xe]4f145d26s2' },\r\n    { number: 73, name: 'Tantalum', symbol: 'Ta', configuration: '[Xe]4f145d36s2' },\r\n    { number: 74, name: 'Tungsten', symbol: 'W', configuration: '[Xe]4f145d46s2' },\r\n    { number: 75, name: 'Rhenium', symbol: 'Re', configuration: '[Xe]4f145d56s2' },\r\n    { number: 76, name: 'Osmium', symbol: 'Os', configuration: '[Xe]4f145d66s2' },\r\n    { number: 77, name: 'Iridium', symbol: 'Ir', configuration: '[Xe]4f145d76s2' },\r\n    { number: 78, name: 'Platinum', symbol: 'Pt', configuration: '[Xe]4f145d96s1' },\r\n    { number: 79, name: 'Gold', symbol: 'Au', configuration: '[Xe]4f145d106s1' },\r\n    { number: 80, name: 'Mercury', symbol: 'Hg', configuration: '[Xe]4f145d106s2' },\r\n    { number: 81, name: 'Thallium', symbol: 'Tl', configuration: '[Xe]4f145d106s26p1' },\r\n    { number: 82, name: 'Lead', symbol: 'Pb', configuration: '[Xe]4f145d106s26p2' },\r\n    { number: 83, name: 'Bismuth', symbol: 'Bi', configuration: '[Xe]4f145d106s26p3' },\r\n    { number: 84, name: 'Polonium', symbol: 'Po', configuration: '[Xe]4f145d106s26p4' },\r\n    { number: 85, name: 'Astatine', symbol: 'At', configuration: '[Xe]4f145d106s26p5' },\r\n    { number: 86, name: 'Radon', symbol: 'Rn', configuration: '[Xe]4f145d106s26p6' },\r\n    { number: 87, name: 'Francium', symbol: 'Fr', configuration: '[Rn]7s1' },\r\n    { number: 88, name: 'Radium', symbol: 'Ra', configuration: '[Rn]7s2' },\r\n    { number: 89, name: 'Actinium', symbol: 'Ac', configuration: '[Rn]6d17s2' },\r\n    { number: 90, name: 'Thorium', symbol: 'Th', configuration: '[Rn]6d27s2' },\r\n    { number: 91, name: 'Protactinium', symbol: 'Pa', configuration: '[Rn]5f26d17s2' },\r\n    { number: 92, name: 'Uranium', symbol: 'U', configuration: '[Rn]5f36d17s2' },\r\n    { number: 93, name: 'Neptunium', symbol: 'Np', configuration: '[Rn]5f46d17s2' },\r\n    { number: 94, name: 'Plutonium', symbol: 'Pu', configuration: '[Rn]5f67s2' },\r\n    { number: 95, name: 'Americium', symbol: 'Am', configuration: '[Rn]5f77s2' },\r\n    { number: 96, name: 'Curium', symbol: 'Cm', configuration: '[Rn]5f76d17s2' },\r\n    { number: 97, name: 'Berkelium', symbol: 'Bk', configuration: '[Rn]5f97s2' },\r\n    { number: 98, name: 'Californium', symbol: 'Cf', configuration: '[Rn]5f107s2' },\r\n    { number: 99, name: 'Einsteinium', symbol: 'Es', configuration: '[Rn]5f117s2' },\r\n    { number: 100, name: 'Fermium', symbol: 'Fm', configuration: '[Rn]5f127s2' },\r\n    { number: 101, name: 'Mendelevium', symbol: 'Md', configuration: '[Rn]5f137s2' },\r\n    { number: 102, name: 'Nobelium', symbol: 'No', configuration: '[Rn]5f147s2' },\r\n    { number: 103, name: 'Lawrencium', symbol: 'Lr', configuration: '[Rn]5f147s27p1' },\r\n    { number: 104, name: 'Rutherfordium', symbol: 'Rf', configuration: '[Rn]5f146d27s2' },\r\n    { number: 105, name: 'Dubnium', symbol: 'Db', configuration: '[Rn]5f146d37s2' },\r\n    { number: 106, name: 'Seaborgium', symbol: 'Sg', configuration: '[Rn]5f146d47s2' },\r\n    { number: 107, name: 'Bohrium', symbol: 'Bh', configuration: '[Rn]5f146d57s2' },\r\n    { number: 108, name: 'Hassium', symbol: 'Hs', configuration: '[Rn]5f146d67s2' },\r\n    { number: 109, name: 'Meitnerium', symbol: 'Mt', configuration: '[Rn]5f146d77s2' },\r\n    { number: 110, name: 'Darmstadtium', symbol: 'Ds', configuration: '[Rn]5f146d97s1' },\r\n    { number: 111, name: 'Roentgenium', symbol: 'Rg', configuration: '[Rn]5f146d107s1' },\r\n    { number: 112, name: 'Copernium', symbol: 'Cn', configuration: '[Rn]5f146d107s2' },\r\n    { number: 113, name: 'Nihonium', symbol: 'Nh', configuration: '[Rn]5f146d107s27p1' },\r\n    { number: 114, name: 'Flerovium', symbol: 'Fl', configuration: '[Rn]5f146d107s27p2' },\r\n    { number: 115, name: 'Moscovium', symbol: 'Mc', configuration: '[Rn]5f146d107s27p3' },\r\n    { number: 116, name: 'Livermorium', symbol: 'Lv', configuration: '[Rn]5f146d107s27p4' },\r\n    { number: 117, name: 'Tennessine', symbol: 'Ts', configuration: '[Rn]5f146d107s27p5' },\r\n    { number: 118, name: 'Oganesson', symbol: 'Og', configuration: '[Rn]5f146d107s27p6' }\r\n];\r\n","import { ElectronLayer } from './ElectronLayer';\r\nimport { elements, IElement } from './elements';\r\n\r\nexport class Atom {\r\n    public readonly protons: number;\r\n    public readonly electrons: number;\r\n\r\n    public readonly number: number;\r\n    public readonly name: string;\r\n    public readonly symbol: string;\r\n    public readonly layers: ElectronLayer[];\r\n\r\n    constructor (element: IElement) {\r\n        this.number = element.number;\r\n        this.name = element.name;\r\n        this.symbol = element.symbol;\r\n\r\n        this.layers = this.parseConfiguration(element.configuration);\r\n\r\n        this.protons = this.number;\r\n        this.electrons = this.number;\r\n    }\r\n\r\n    public getElectronsInLayer (n: number): number {\r\n        const sum = this.layers\r\n            .filter((x) => x.number === n)\r\n            .reduce((s, x) => s + x.count, 0);\r\n\r\n        return sum;\r\n    }\r\n\r\n    private parseConfiguration (configuration: string): ElectronLayer[] {\r\n        const reSymbol = /(\\[.+\\])/g;\r\n        const reLetter = /[a-zA-Z]/g;\r\n\r\n        while (reSymbol.test(configuration)) {\r\n            const match = configuration.match(reSymbol)[0];\r\n            const symbol = match.slice(1, match.length - 1);\r\n\r\n            const element = elements.find((x) => x.symbol === symbol);\r\n            configuration = configuration.replace(match, element.configuration);\r\n        }\r\n\r\n        const layers: string[] = [];\r\n        let lastLayerStart: number = 0;\r\n\r\n        for (let i = 0; i < configuration.length; i++) {\r\n            const char = configuration[i];\r\n            if (reLetter.test(char) && i > 1) {\r\n                layers.push(configuration.slice(lastLayerStart, i - 1));\r\n                lastLayerStart = i - 1;\r\n            }\r\n        }\r\n        layers.push(configuration.slice(lastLayerStart, configuration.length));\r\n\r\n        const result = layers.map((x) => new ElectronLayer(x));\r\n\r\n        return result;\r\n    }\r\n}\r\n","export class Point {\r\n    constructor (public x: number, public y: number) {}\r\n\r\n    public clone (): Point {\r\n        return new Point(this.x, this.y);\r\n    }\r\n}\r\n","import { Atom } from './Atom';\r\nimport { ElectronLayer } from './ElectronLayer';\r\nimport { elements } from './elements';\r\nimport { Point } from './Point';\r\n\r\nexport class Renderer {\r\n    private orbitGap: number = 9;\r\n    private layerGap: number = 4 * this.orbitGap + this.orbitGap;\r\n    private coreOffset: number = this.layerGap / 2;\r\n    private electronRadius: number = this.orbitGap / 3;\r\n\r\n    constructor (private readonly ctx: CanvasRenderingContext2D) {}\r\n\r\n    public clear () {\r\n        this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n\r\n        this.ctx.font = '30px sans-serif';\r\n        this.ctx.textAlign = 'left';\r\n        this.ctx.textBaseline = 'top';\r\n    }\r\n\r\n    public drawAtom (atom: Atom) {\r\n        const position = new Point(this.ctx.canvas.width / 2, this.ctx.canvas.height / 2);\r\n\r\n        this.drawCore(position, atom);\r\n        this.drawLayers(position, atom);\r\n\r\n        const layers = Math.max(...atom.layers.map((x) => x.number));\r\n        this.drawSymbol(position, this.coreOffset + this.layerGap * (layers + 1), atom.symbol);\r\n        this.drawName(position, this.coreOffset + this.layerGap * (layers + 1), atom.name);\r\n    }\r\n\r\n    private drawCore (position: Point, atom: Atom) {\r\n        this.ctx.fillStyle = '#000';\r\n        this.ctx.beginPath();\r\n        this.ctx.arc(position.x, position.y, 3 + (2 * this.orbitGap - 3) * ((atom.number + 1) / elements.length), 0, 2 * Math.PI, false);\r\n        this.ctx.fill();\r\n    }\r\n\r\n    private drawLayers (position: Point, atom: Atom) {\r\n        for (const layer of atom.layers) {\r\n            this.drawLayer(position, layer);\r\n        }\r\n    }\r\n\r\n    private drawLayer (position: Point, layer: ElectronLayer) {\r\n        let radius = this.coreOffset + this.layerGap * layer.number;\r\n        let color = '#000';\r\n        let angle = Math.PI;\r\n        let electrons = 1;\r\n\r\n        switch (layer.type) {\r\n            case 's':\r\n                electrons = 2;\r\n                angle = 0;\r\n                color = '#c00';\r\n                radius += 0 * this.orbitGap;\r\n                break;\r\n            case 'p':\r\n                electrons = 6;\r\n                angle = 2 * Math.PI / (electrons / 2);\r\n                color = '#0c0';\r\n                radius += 1 * this.orbitGap;\r\n                break;\r\n            case 'd':\r\n                electrons = 10;\r\n                angle = 2 * Math.PI / (electrons / 2);\r\n                color = '#cc0';\r\n                radius += 2 * this.orbitGap;\r\n                break;\r\n            case 'f':\r\n                electrons = 14;\r\n                angle = 2 * Math.PI / (electrons / 2);\r\n                color = '#a0c';\r\n                radius += 3 * this.orbitGap;\r\n                break;\r\n        }\r\n\r\n        this.ctx.strokeStyle = 'rgba(0, 0, 0, 0.1)';\r\n        this.ctx.lineWidth = 1;\r\n        this.ctx.beginPath();\r\n        this.ctx.arc(position.x, position.y, radius, 0, 2 * Math.PI, false);\r\n        this.ctx.stroke();\r\n\r\n        const l = Math.min(layer.count, electrons / 2);\r\n        for (let i = 0; i < l; i++) {\r\n            let double = false;\r\n\r\n            if (i + electrons / 2 < layer.count) {\r\n                double = true;\r\n            }\r\n\r\n            this.drawElectron(position, radius, i * angle, color, double);\r\n        }\r\n    }\r\n\r\n    private drawElectron (position: Point, radius: number, angle: number, color: string, double: boolean = false) {\r\n        if (double) {\r\n            const a = (2 * Math.PI) * (this.orbitGap / (2 * Math.PI * radius));\r\n            this.drawElectron(position, radius, angle - (a / 2), color);\r\n            this.drawElectron(position, radius, angle + (a / 2), color);\r\n        } else {\r\n            const x = position.x + Math.sin(angle) * radius;\r\n            const y = position.y - Math.cos(angle) * radius;\r\n\r\n            this.ctx.fillStyle = color;\r\n            this.ctx.beginPath();\r\n            this.ctx.arc(x, y, this.electronRadius + (double ? 4 : 0), 0, 2 * Math.PI, false);\r\n            this.ctx.fill();\r\n        }\r\n    }\r\n\r\n    private drawSymbol (postition: Point, radius: number, symbol: string) {\r\n        this.ctx.fillStyle = '#000';\r\n        this.ctx.textAlign = 'center';\r\n        this.ctx.textBaseline = 'bottom';\r\n        this.ctx.font = 'bold 24px serif';\r\n        this.ctx.fillText(symbol, postition.x, postition.y - radius);\r\n    }\r\n\r\n    private drawName (postition: Point, radius: number, symbol: string) {\r\n        this.ctx.fillStyle = '#000';\r\n        this.ctx.textAlign = 'center';\r\n        this.ctx.textBaseline = 'top';\r\n        this.ctx.font = '14px serif';\r\n        this.ctx.fillText(symbol, postition.x, postition.y - radius + 2);\r\n    }\r\n}\r\n","import { Atom } from './Atom';\r\nimport { elements } from './elements';\r\nimport { Renderer } from './Renderer';\r\n\r\ndeclare global {\r\n    // tslint:disable-next-line:interface-name\r\n    interface Window { interval: number; }\r\n}\r\n\r\nexport class App {\r\n    private canvas: HTMLCanvasElement;\r\n    private ctx: CanvasRenderingContext2D;\r\n\r\n    private renderer: Renderer;\r\n\r\n    constructor () {\r\n        this.canvas = document.createElement('canvas') as HTMLCanvasElement;\r\n        // this.canvas.width = window.innerWidth;\r\n        // this.canvas.height = window.innerHeight;\r\n\r\n        this.ctx = this.canvas.getContext('2d');\r\n        this.renderer = new Renderer(this.ctx);\r\n\r\n        window.onresize = () => this.resize();\r\n        this.resize();\r\n\r\n        document.body.insertAdjacentElement('afterbegin', this.canvas);\r\n\r\n        this.run();\r\n    }\r\n\r\n    public run (): void {\r\n        let i = 0;\r\n\r\n        const render = () => {\r\n            this.renderer.clear();\r\n\r\n            const test = new Atom(elements[i]);\r\n            this.renderer.drawAtom(test);\r\n\r\n            i++;\r\n\r\n            if (i >= elements.length) { i = 0; }\r\n        };\r\n\r\n        render();\r\n\r\n        window.onclick = () => {\r\n            window.clearInterval(window.interval);\r\n            render();\r\n        };\r\n        window.interval = window.setInterval(() => render(), 500);\r\n    }\r\n\r\n    private resize () {\r\n        const w = document.body.clientWidth;\r\n        const h = document.body.clientHeight;\r\n\r\n        if (typeof window.devicePixelRatio === 'number') {\r\n            this.canvas.width = w * window.devicePixelRatio;\r\n            this.canvas.height = h * window.devicePixelRatio;\r\n        } else {\r\n            this.canvas.width = w;\r\n            this.canvas.height = h;\r\n        }\r\n    }\r\n}\r\n","import { App } from './App';\r\n\r\ndeclare global {\r\n    // tslint:disable-next-line:interface-name\r\n    interface Window {\r\n        anim: number;\r\n        interval: number;\r\n    }\r\n}\r\n\r\nconst dead = document.body.querySelector('canvas');\r\nif (dead) {\r\n    dead.parentNode.removeChild(dead);\r\n}\r\nwindow.cancelAnimationFrame(window.anim);\r\nwindow.clearInterval(window.interval);\r\nwindow.onclick = null;\r\n\r\nconsole.clear();\r\nconsole.log(new Date());\r\n\r\nconst app = new App();\r\n// app.run();\r\n"]}